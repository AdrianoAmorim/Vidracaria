package view;

import crud.CategoriaCRUD;
import crud.ProdutoCRUD;
import crud.ProdutoCompradoCRUD;
import crud.ProdutoVendidoCRUD;
import domain.Categoria;
import domain.Produto;
import domain.ProdutoComprado;
import domain.ProdutoVendido;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adriano
 */
public class FrmAdicionarProduto extends javax.swing.JDialog {

    ArrayList<ProdutoComprado> listProdutoComprado;
    ArrayList<ProdutoVendido> listProdutoVendido;

    int codigo;
    String operacao;

    ArrayList<ProdutoVendido> produtoVendido = new ArrayList<>();

    /**
     * Creates new form FrmAdicionarProduto
     */
    public FrmAdicionarProduto(java.awt.Frame parent, boolean modal, int codigo, String operacao) {
        super(parent, modal);
        initComponents();
        this.codigo = codigo;
        this.operacao = operacao;

        switch (operacao) {
            case "pnlVenda":
                this.tfAdicionarProdutoPrecoCusto.setVisible(false);
                this.lblAddProdutoPrecoCusto.setVisible(false);
                break;
            case "pnlCompra":
                this.tfAdicionarProdutoPrecoCusto.setVisible(true);
                this.lblAddProdutoPrecoCusto.setVisible(true);
                break;
        }

        this.carregarCbCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfAdicionarProdutoCodigo = new javax.swing.JTextField();
        tfAdicionarProdutoDescricao = new javax.swing.JTextField();
        btnAdicionarProdutoTabela = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlAddProdutosResultQuery = new javax.swing.JList();
        tfAdicionarProdutoPrecoCusto = new javax.swing.JTextField();
        tfAdicionarProdutoQuantidade = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        lblCompraListaProdutos = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAdicionarProdutoListaProduto = new javax.swing.JTable();
        lblCompraFornecedor = new javax.swing.JLabel();
        lblCompraFornecedor1 = new javax.swing.JLabel();
        lblAddProdutoPrecoCusto = new javax.swing.JLabel();
        lblCompraFornecedor3 = new javax.swing.JLabel();
        cbAddProdutoCategoria = new javax.swing.JComboBox();
        jLabel592 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frmAdicionarProduto"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tfAdicionarProdutoCodigo.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfAdicionarProdutoCodigoCaretUpdate(evt);
            }
        });

        tfAdicionarProdutoDescricao.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfAdicionarProdutoDescricaoCaretUpdate(evt);
            }
        });

        btnAdicionarProdutoTabela.setText("Adicionar");
        btnAdicionarProdutoTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoTabelaActionPerformed(evt);
            }
        });

        jlAddProdutosResultQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlAddProdutosResultQueryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlAddProdutosResultQuery);

        jPanel21.setBackground(new java.awt.Color(153, 153, 255));

        lblCompraListaProdutos.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCompraListaProdutos.setForeground(new java.awt.Color(255, 255, 255));
        lblCompraListaProdutos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCompraListaProdutos.setText("Adicionar Produtos");
        lblCompraListaProdutos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCompraListaProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCompraListaProdutos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbAdicionarProdutoListaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Quantidade", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbAdicionarProdutoListaProduto);
        if (tbAdicionarProdutoListaProduto.getColumnModel().getColumnCount() > 0) {
            tbAdicionarProdutoListaProduto.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbAdicionarProdutoListaProduto.getColumnModel().getColumn(1).setResizable(false);
            tbAdicionarProdutoListaProduto.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbAdicionarProdutoListaProduto.getColumnModel().getColumn(2).setPreferredWidth(80);
            tbAdicionarProdutoListaProduto.getColumnModel().getColumn(3).setPreferredWidth(80);
        }

        lblCompraFornecedor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCompraFornecedor.setForeground(new java.awt.Color(0, 69, 139));
        lblCompraFornecedor.setText("Código");

        lblCompraFornecedor1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCompraFornecedor1.setForeground(new java.awt.Color(0, 69, 139));
        lblCompraFornecedor1.setText("Descrição");

        lblAddProdutoPrecoCusto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAddProdutoPrecoCusto.setForeground(new java.awt.Color(0, 69, 139));
        lblAddProdutoPrecoCusto.setText("Preço Custo:");

        lblCompraFornecedor3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCompraFornecedor3.setForeground(new java.awt.Color(0, 69, 139));
        lblCompraFornecedor3.setText("Quantidade:");

        cbAddProdutoCategoria.setBackground(new java.awt.Color(204, 204, 255));
        cbAddProdutoCategoria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbAddProdutoCategoria.setToolTipText("");

        jLabel592.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel592.setForeground(new java.awt.Color(0, 69, 139));
        jLabel592.setText("Categoria:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdicionarProdutoTabela)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfAdicionarProdutoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfAdicionarProdutoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCompraFornecedor)
                                .addComponent(lblCompraFornecedor1)
                                .addComponent(jLabel592)
                                .addComponent(cbAddProdutoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCompraFornecedor3)
                                    .addGap(66, 66, 66)
                                    .addComponent(tfAdicionarProdutoQuantidade))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblAddProdutoPrecoCusto)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfAdicionarProdutoPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCompraFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAdicionarProdutoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCompraFornecedor1)
                        .addGap(4, 4, 4)
                        .addComponent(tfAdicionarProdutoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel592)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAddProdutoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAdicionarProdutoPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddProdutoPrecoCusto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAdicionarProdutoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCompraFornecedor3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarProdutoTabela))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //  Carregar lista de tipos de pagamento
    public void carregarCbCategoria() {
        CategoriaCRUD categoriaCRUD = new CategoriaCRUD();

        ArrayList<Categoria> arrayCategorias = categoriaCRUD.consultarCategoria();
        cbAddProdutoCategoria.removeAllItems();

        for (Categoria categoria : arrayCategorias) {
            cbAddProdutoCategoria.addItem(categoria.getDescricao());
        }
    }

    private void pesquisarProdutoCaretUpdate() {
        ProdutoCRUD produtoCRUD = new ProdutoCRUD();
        ArrayList<Produto> listaProdutos = new ArrayList<>();
        String categoria = cbAddProdutoCategoria.getSelectedItem().toString();

        listaProdutos = produtoCRUD.consultarProdutos(categoria, tfAdicionarProdutoCodigo, tfAdicionarProdutoDescricao);

        DefaultListModel listModelo = new DefaultListModel();
        jlAddProdutosResultQuery.setModel(listModelo);

        listModelo.removeAllElements();

        if (!tfAdicionarProdutoCodigo.getText().isEmpty()) {
            for (Produto produto : listaProdutos) {
                listModelo.addElement(produto.getDescricao());
            }
        }
    }

    private void btnAdicionarProdutoTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoTabelaActionPerformed
        DefaultTableModel modeloTabela = (DefaultTableModel) tbAdicionarProdutoListaProduto.getModel();
        Produto produto = new ProdutoCRUD().consultarProduto(jlAddProdutosResultQuery.getSelectedValue().toString(), 0);

        if (operacao.equalsIgnoreCase("pnlVenda")) {
            modeloTabela.addRow(new Object[]{produto.getCodProduto(), produto.getDescricao(), tfAdicionarProdutoQuantidade.getText(),
                produto.getPrecoVenda()});
        } else if (this.operacao.equalsIgnoreCase("pnlCompra")) {
            modeloTabela.addRow(new Object[]{produto.getCodProduto(), produto.getDescricao(), tfAdicionarProdutoQuantidade.getText(),
                tfAdicionarProdutoPrecoCusto.getText()});
        }
    }//GEN-LAST:event_btnAdicionarProdutoTabelaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //testa se a operação e de Compra ou venda
        if (operacao.equalsIgnoreCase("pnlVenda")) {
            for (int i = 0; i < tbAdicionarProdutoListaProduto.getRowCount(); i++) {
                ProdutoVendido produtoVendido = new ProdutoVendido();

                // recebe as informações do produto
                produtoVendido.setCodProduto(Integer.valueOf(tbAdicionarProdutoListaProduto.getValueAt(i, 0).toString()));
                produtoVendido.setCodRenda(1);
                produtoVendido.setCodVenda(this.codigo);
                produtoVendido.setQuantidadeProduto(Double.parseDouble(tbAdicionarProdutoListaProduto.getValueAt(i, 2).toString()));
                produtoVendido.setPrecoVenda(Double.parseDouble(tbAdicionarProdutoListaProduto.getValueAt(i, 3).toString()));

                // adiciona o produto na lista de Produtos vendidos
                this.listProdutoVendido.add(produtoVendido);
            }
        } else if (operacao.equalsIgnoreCase("pnlCompra")) {
            // lista dos produtos Comprados
            ProdutoComprado produtoComprado = new ProdutoComprado();

            for (int i = 0; i < tbAdicionarProdutoListaProduto.getRowCount(); i++) {
                // recebe as informações do produto
                produtoComprado.setCodProduto((int) (tbAdicionarProdutoListaProduto.getValueAt(i, 0)));
                produtoComprado.setCodDespesa(1);
                produtoComprado.setCodCompra(this.codigo);
                produtoComprado.setQuantidadeProduto(Double.parseDouble(tbAdicionarProdutoListaProduto.getValueAt(i, 2).toString()));
                produtoComprado.setPrecoCusto(Double.parseDouble((String) tbAdicionarProdutoListaProduto.getValueAt(i, 3)));

                // adiciona o produto na lista
                this.listProdutoComprado.add(produtoComprado);
            }
        }

    }//GEN-LAST:event_formWindowClosing

    private void tfAdicionarProdutoCodigoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfAdicionarProdutoCodigoCaretUpdate
        this.pesquisarProdutoCaretUpdate();
    }//GEN-LAST:event_tfAdicionarProdutoCodigoCaretUpdate

    private void tfAdicionarProdutoDescricaoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfAdicionarProdutoDescricaoCaretUpdate
        this.pesquisarProdutoCaretUpdate();
    }//GEN-LAST:event_tfAdicionarProdutoDescricaoCaretUpdate

    private void jlAddProdutosResultQueryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlAddProdutosResultQueryMouseClicked
        //testa se a operação e de Compra ou venda
        if (operacao.equalsIgnoreCase("pnlVenda")) {
            DefaultTableModel modeloTabela = (DefaultTableModel) tbAdicionarProdutoListaProduto.getModel();
            ProdutoCRUD produtoCRUD = new ProdutoCRUD();
            ProdutoVendidoCRUD produtoVendidoCRUD = new ProdutoVendidoCRUD();

            for (ProdutoVendido produtoVendido : produtoVendidoCRUD.consultarProdutoVendido()) {
                String descricao = produtoCRUD.consultarProduto("", produtoVendido.getCodProduto()).getDescricao();

                modeloTabela.addRow(new Object[]{produtoVendido.getCodProduto(), descricao,
                    produtoVendido.getQuantidadeProduto(), produtoVendido.getPrecoVenda()});
            }

        } else if (operacao.equalsIgnoreCase("pnlCompra")) {
            ProdutoCompradoCRUD produtoCompradoCRUD = new ProdutoCompradoCRUD();
            DefaultTableModel modeloTabela = (DefaultTableModel) tbAdicionarProdutoListaProduto.getModel();
            ProdutoCRUD produtoCRUD = new ProdutoCRUD();

            for (ProdutoComprado produtoComprado : produtoCompradoCRUD.consultarProdutoComprado()) {
                String descricao = produtoCRUD.consultarProduto("", produtoComprado.getCodProduto()).getDescricao();

                modeloTabela.addRow(new Object[]{produtoComprado.getCodProduto(), descricao,
                    produtoComprado.getQuantidadeProduto(), produtoComprado.getPrecoCusto()});

            }
        }
    }//GEN-LAST:event_jlAddProdutosResultQueryMouseClicked

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProdutoTabela;
    private javax.swing.JComboBox cbAddProdutoCategoria;
    private javax.swing.JLabel jLabel592;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList jlAddProdutosResultQuery;
    private javax.swing.JLabel lblAddProdutoPrecoCusto;
    private javax.swing.JLabel lblCompraFornecedor;
    private javax.swing.JLabel lblCompraFornecedor1;
    private javax.swing.JLabel lblCompraFornecedor3;
    private javax.swing.JLabel lblCompraListaProdutos;
    private javax.swing.JTable tbAdicionarProdutoListaProduto;
    private javax.swing.JTextField tfAdicionarProdutoCodigo;
    private javax.swing.JTextField tfAdicionarProdutoDescricao;
    private javax.swing.JTextField tfAdicionarProdutoPrecoCusto;
    private javax.swing.JTextField tfAdicionarProdutoQuantidade;
    // End of variables declaration//GEN-END:variables
}
